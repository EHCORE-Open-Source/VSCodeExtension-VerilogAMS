{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "verilog-a",
    "patterns": [
        {
            "include": "#strings"
        },
        {
            "include": "#comment"
        },
        {
            "include": "#numeric"
        },
        {
            "include": "#module"
        },
        {
            "include": "#keywords"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.va",
                    "match": "\\b(access|acosh?|ac_stim|aliasparam|always|analog|analysis|and|asin|asinh|assert|assign|atan[2h]?|atanh|automatic|begin|branch|buf(if[01])?|case[xz]?|ce[il]l|cmos|config|continuous|cosh?|cross|ddt|ddt_nature|ddx|deassign|default|defparam|design|disable|discipline|discrete|domain|edge|else|end(case|config|discipline|function|generate|module|nature|paramset|primitive|specify|table|task)?|event|exclude|exp|final_step|flicker_noise|floor|flow|for|force|forever|fork|from|function|generate|genvar|ground|highz[01]?|hypot|idt|idtmod|idt_nature|if|ifnone|incdir|include|inf|initial|initial_step|inout|input|instance|integer|join|laplace_(nd|np|zd|zp)|large|last_crossing|liblist|library|limexp|ln|localparam|log|macromodule|max|medium|min|module|nand|nature|negedge|nmos|noise_table|noise_table_log|nor|noshowcancelled|notif[01]?|or|output|parameter|paramset|pmos|posedge|potential|pow|primitive|pull(0|1|down|up)?|pulsestyle_(onevent|ondetect)|rcmos|real|realtime|reg|release|repeat|rnmos|rpmos|rtran(if[01])?|scalared|sin|sinh|showcancelled|signed|slew|small|specify|specparam|sqrt|string|strong[01]?|supply[01]?|table|tan|tanh|task|timer?|tran(if[01])?|transition|tri[01]?|triand|trior|trireg|units|unsigned|use|uwire|vectored|wait|wand|weak[01]?|while|white_noise|wire|wor|xnor|xor|zi_(nd|np|zd|zp))\\b"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "comment": "block comment",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.va"
                },
                {
                    "comment": "line comment",
                    "name": "comment.line.va",
                    "match": "//.*"
                }
            ]
        },
        "numeric": {
            "patterns": [
                {
                    "comment": "numeric for scientific or symbol notation",
                    "name": "constant.numeric.va",
                    "match": "([+-]?[0-9_]+(\\.[0-9_]+)?([eE][+-]?[0-9_]+|[TGMKkmunpfa])?($|\\s+))"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "comment": "double quotes",
                    "begin": "\\\"", 
                    "end": "\\\"",
                    "name": "string.quoted.double.va",
		            "patterns": [
                        {
                            "name": "constant.character.escape.va",
                            "match": "\\\\([nt\\x5C\\x22]|[01]?[0-7]{1,2})"
                        }
                    ]
                     	
                }
            ]
        },
        "module": {
            "patterns": [
                {
                    "comment": "(2.8) A simple identifier shall be any sequence of letters, digits, dollar signs ($), and the underscore characters (_).",
                    "begin": "\\b(module)\\s+([[:alpha:]_][[:alnum:]_$]*)",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.va"
                        },
                        "2": {
                            "name": "storage.type.module.va"
                        }
                    },
                    "end": "\\bendmodule\\b",
                    "endCaptures": {
                        "0": {
                            "name": "keyword.control.va"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#keywords"
                        }
                    ]
                }
            ]
        }
    },
    "scopeName": "source.va"
}